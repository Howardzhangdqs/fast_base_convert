{"version":3,"file":"index-Cms6w8Av.js","sources":["../../pkg/fast_base_convert.js","../../src/main.ts"],"sourcesContent":["let wasm;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nexport function greet() {\n    wasm.greet();\n}\n\nlet cachedUint32ArrayMemory0 = null;\n\nfunction getUint32ArrayMemory0() {\n    if (cachedUint32ArrayMemory0 === null || cachedUint32ArrayMemory0.byteLength === 0) {\n        cachedUint32ArrayMemory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32ArrayMemory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32ArrayMemory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n * @param {string} test_type\n * @param {number} iterations\n * @param {Uint32Array} input_digits\n * @param {number} from_base\n * @param {number} to_base\n * @returns {any}\n */\nexport function run_quick_benchmark(test_type, iterations, input_digits, from_base, to_base) {\n    const ptr0 = passStringToWasm0(test_type, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(input_digits, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.run_quick_benchmark(ptr0, len0, iterations, ptr1, len1, from_base, to_base);\n    return ret;\n}\n\nexport function main() {\n    wasm.main();\n}\n\nconst BenchmarkRunnerFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_benchmarkrunner_free(ptr >>> 0, 1));\n\nexport class BenchmarkRunner {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        BenchmarkRunnerFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_benchmarkrunner_free(ptr, 0);\n    }\n    /**\n     * @param {string} test_type\n     * @param {number} iterations\n     * @param {Uint32Array} input_digits\n     * @param {number} from_base\n     * @param {number} to_base\n     */\n    constructor(test_type, iterations, input_digits, from_base, to_base) {\n        const ptr0 = passStringToWasm0(test_type, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(input_digits, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.benchmarkrunner_new(ptr0, len0, iterations, ptr1, len1, from_base, to_base);\n        this.__wbg_ptr = ret >>> 0;\n        BenchmarkRunnerFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @returns {any}\n     */\n    run_benchmark() {\n        const ret = wasm.benchmarkrunner_run_benchmark(this.__wbg_ptr);\n        return ret;\n    }\n}\nif (Symbol.dispose) BenchmarkRunner.prototype[Symbol.dispose] = BenchmarkRunner.prototype.free;\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_Error_e17e777aac105295 = function(arg0, arg1) {\n        const ret = Error(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_alert_9d8f96a579801060 = function(arg0, arg1) {\n        alert(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_call_13410aac570ffff7 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_instanceof_Window_12d20d558ef92592 = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_new_19c25a3f2fa63a02 = function() {\n        const ret = new Object();\n        return ret;\n    };\n    imports.wbg.__wbg_new_1f3a344cf3123716 = function() {\n        const ret = new Array();\n        return ret;\n    };\n    imports.wbg.__wbg_new_8a6f238a6ece86ea = function() {\n        const ret = new Error();\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_254190557c45b4ec = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_now_886b39d7ec380719 = function(arg0) {\n        const ret = arg0.now();\n        return ret;\n    };\n    imports.wbg.__wbg_performance_a221af8decc752fb = function(arg0) {\n        const ret = arg0.performance;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        arg0[arg1] = arg2;\n    };\n    imports.wbg.__wbg_set_90f6c0f7bd8c0415 = function(arg0, arg1, arg2) {\n        arg0[arg1 >>> 0] = arg2;\n    };\n    imports.wbg.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n        const ret = arg1.stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_8921f820c2ce3f12 = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_f0a4409105898184 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_995b214ae681ff99 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_cde3890479c675ea = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_wbindgendebugstring_99ef257a3ddda34d = function(arg0, arg1) {\n        const ret = debugString(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenisundefined_c4b71d073b92f3c5 = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenthrow_451ec1a8469d7eb6 = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_cast_2241b6af4c4b2941 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(String) -> Externref`.\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_4625c577ab2ec9ee = function(arg0) {\n        // Cast intrinsic for `U64 -> Externref`.\n        const ret = BigInt.asUintN(64, arg0);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_d6cd19b81560fd6e = function(arg0) {\n        // Cast intrinsic for `F64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint32ArrayMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('fast_base_convert_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","import init, { run_quick_benchmark } from '../pkg/fast_base_convert.js';\n\ninterface BenchmarkResult {\n  baseline_time: number;\n  optimized_time: number;\n  speedup: number;\n  baseline_result: number[];\n  optimized_result: number[];\n  is_correct: boolean;\n}\n\nclass BenchmarkApp {\n  private currentPreset: string = 'small';\n\n  constructor() {\n    this.initializeEventListeners();\n  }\n\n  private initializeEventListeners() {\n    const runButton = document.getElementById('runBenchmark') as HTMLButtonElement;\n    const presetButtons = document.querySelectorAll('.preset-btn');\n\n    runButton.addEventListener('click', () => this.runBenchmark());\n\n    presetButtons.forEach(button => {\n      button.addEventListener('click', (e) => {\n        presetButtons.forEach(btn => btn.classList.remove('active'));\n        (e.target as HTMLElement).classList.add('active');\n        this.currentPreset = (e.target as HTMLElement).dataset.preset || 'custom';\n        this.loadPreset(this.currentPreset);\n      });\n    });\n  }\n\n  private loadPreset(preset: string) {\n    const iterations = document.getElementById('iterations') as HTMLInputElement;\n    const fromBase = document.getElementById('fromBase') as HTMLInputElement;\n    const toBase = document.getElementById('toBase') as HTMLInputElement;\n    const inputNumber = document.getElementById('inputNumber') as HTMLInputElement;\n\n    switch (preset) {\n      case 'small':\n        iterations.value = '100000';\n        fromBase.value = '10';\n        toBase.value = '16';\n        inputNumber.value = '12345';\n        break;\n      case 'power2':\n        iterations.value = '1000000';\n        fromBase.value = '16';\n        toBase.value = '8';\n        inputNumber.value = '65535'; // 0xFFFF in hex, which is 1111111111111111 in binary\n        break;\n      case 'aligned':\n        iterations.value = '200000';\n        fromBase.value = '4';\n        toBase.value = '16';\n        inputNumber.value = '123';\n        break;\n      case 'large':\n        iterations.value = '10000';\n        fromBase.value = '10';\n        toBase.value = '16';\n        inputNumber.value = '1' + '0'.repeat(100); // 10^100\n        break;\n    }\n  }\n\n  private async runBenchmark() {\n    const loading = document.getElementById('loading');\n    const results = document.getElementById('results');\n    const error = document.getElementById('error');\n    const runButton = document.getElementById('runBenchmark') as HTMLButtonElement;\n\n    // Hide previous results and errors\n    loading!.style.display = 'block';\n    results!.style.display = 'none';\n    error!.style.display = 'none';\n    runButton.disabled = true;\n\n    try {\n      // Get input values\n      const iterations = parseInt((document.getElementById('iterations') as HTMLInputElement).value);\n      const fromBase = parseInt((document.getElementById('fromBase') as HTMLInputElement).value);\n      const toBase = parseInt((document.getElementById('toBase') as HTMLInputElement).value);\n      const inputStr = (document.getElementById('inputNumber') as HTMLInputElement).value;\n\n      // Convert string to digits\n      const inputDigits = this.stringToDigits(inputStr, fromBase);\n\n      // Determine test type\n      let testType = 'custom';\n      if (this.currentPreset !== 'custom') {\n        testType = this.currentPreset;\n      } else {\n        if (this.isPowerOfTwo(fromBase) && this.isPowerOfTwo(toBase)) {\n          testType = 'power-of-two';\n        } else if (inputDigits.length <= 5 && fromBase === 10) {\n          testType = 'small-number';\n        } else if (this.areAlignedBases(fromBase, toBase)) {\n          testType = 'aligned-bases';\n        } else {\n          testType = 'general-case';\n        }\n      }\n\n      // Run benchmark\n      const result = await this.performBenchmark(testType, iterations, new Uint32Array(inputDigits), fromBase, toBase);\n\n      // Display results\n      this.displayResults(result, testType);\n      this.updateChart(result);\n\n    } catch (err) {\n      console.error('Benchmark error:', err);\n      error!.textContent = `Error: ${err}`;\n      error!.style.display = 'block';\n    } finally {\n      loading!.style.display = 'none';\n      runButton.disabled = false;\n    }\n  }\n\n  private async performBenchmark(\n    testType: string,\n    iterations: number,\n    inputDigits: Uint32Array,\n    fromBase: number,\n    toBase: number\n  ): Promise<BenchmarkResult> {\n    // Warm up\n    await init();\n\n    // Create and run benchmark\n    const result = await run_quick_benchmark(\n      testType,\n      iterations,\n      inputDigits,\n      fromBase,\n      toBase\n    );\n\n    return result as BenchmarkResult;\n  }\n\n  private stringToDigits(str: string, base: number): number[] {\n    const digits: number[] = [];\n    let num: bigint;\n\n    // Handle different number formats\n    if (str.startsWith('0x') || str.startsWith('0X')) {\n      // Hexadecimal\n      num = BigInt(str);\n    } else if (str.startsWith('0b') || str.startsWith('0B')) {\n      // Binary\n      num = BigInt(str);\n    } else if (str.startsWith('0o') || str.startsWith('0O')) {\n      // Octal\n      num = BigInt(str);\n    } else {\n      // Decimal\n      num = BigInt(str);\n    }\n\n    if (num === 0n) {\n      return [0];\n    }\n\n    while (num > 0n) {\n      digits.push(Number(num % BigInt(base)));\n      num = num / BigInt(base);\n    }\n\n    return digits;\n  }\n\n  private isPowerOfTwo(n: number): boolean {\n    return n > 0 && (n & (n - 1)) === 0;\n  }\n\n  private areAlignedBases(base1: number, base2: number): boolean {\n    // Simple check for common aligned bases\n    const commonAlignments = [\n      [4, 16], [8, 64], [16, 256], [3, 27], [9, 81],\n      [16, 4], [64, 8], [256, 16], [27, 3], [81, 9]\n    ];\n\n    return commonAlignments.some(([a, b]) =>\n      (a === base1 && b === base2) || (a === base2 && b === base1)\n    );\n  }\n\n  private displayResults(result: BenchmarkResult, testType: string) {\n    const results = document.getElementById('results')!;\n    results.style.display = 'grid';\n\n    document.getElementById('baselineTime')!.textContent = `${result.baseline_time.toFixed(2)} ms`;\n    document.getElementById('optimizedTime')!.textContent = `${result.optimized_time.toFixed(2)} ms`;\n    document.getElementById('testType')!.textContent = testType;\n    document.getElementById('inputDigits')!.textContent = result.baseline_result.length + ' digits';\n\n    const correctnessEl = document.getElementById('correctness')!;\n    correctnessEl.textContent = result.is_correct ? '✓ Correct' : '✗ Incorrect';\n    correctnessEl.style.color = result.is_correct ? '#4caf50' : '#f44336';\n\n    const speedupEl = document.getElementById('speedup')!;\n    speedupEl.textContent = `${result.speedup.toFixed(2)}× speedup`;\n    speedupEl.className = `speedup ${result.speedup > 1 ? 'positive' : 'negative'}`;\n  }\n\n  private updateChart(result: BenchmarkResult) {\n    // Find the chart container safely\n    const chartContainer = document.getElementById('chartContainer');\n    if (!chartContainer) {\n      // Create chart container if it doesn't exist\n      const resultsSection = document.getElementById('resultsSection');\n      if (!resultsSection) return;\n\n      const newChartContainer = document.createElement('div');\n      newChartContainer.id = 'chartContainer';\n      newChartContainer.className = 'chart-container';\n      newChartContainer.style.display = 'block';\n      resultsSection.appendChild(newChartContainer);\n    }\n\n    // Get or create the chart container\n    const container = document.getElementById('chartContainer')!;\n    container.style.display = 'block';\n\n    // Simple bar chart using CSS with modern design\n    const baselineHeight = (result.baseline_time / Math.max(result.baseline_time, result.optimized_time)) * 250;\n    const optimizedHeight = (result.optimized_time / Math.max(result.baseline_time, result.optimized_time)) * 250;\n\n    container.innerHTML = `\n      <div style=\"display: flex; justify-content: space-around; align-items: flex-end; height: 300px; padding: 20px;\">\n        <div style=\"text-align: center;\">\n          <div style=\"background: linear-gradient(135deg, #667eea, #5a67d8); width: 120px; height: ${baselineHeight}px; margin-bottom: 12px; border-radius: 8px 8px 0 0; transition: height 0.3s ease; box-shadow: 0 2px 8px rgba(102, 126, 234, 0.2);\"></div>\n          <div style=\"font-weight: 600; color: #333; font-size: 16px; margin-bottom: 4px;\">Baseline</div>\n          <div style=\"font-weight: bold; color: #667eea; font-size: 18px;\">${result.baseline_time.toFixed(2)} ms</div>\n        </div>\n        <div style=\"text-align: center;\">\n          <div style=\"background: linear-gradient(135deg, #10b981, #059669); width: 120px; height: ${optimizedHeight}px; margin-bottom: 12px; border-radius: 8px 8px 0 0; transition: height 0.3s ease; box-shadow: 0 2px 8px rgba(16, 185, 129, 0.2);\"></div>\n          <div style=\"font-weight: 600; color: #333; font-size: 16px; margin-bottom: 4px;\">Optimized</div>\n          <div style=\"font-weight: bold; color: #10b981; font-size: 18px;\">${result.optimized_time.toFixed(2)} ms</div>\n        </div>\n      </div>\n    `;\n  }\n}\n\n// Initialize app when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  new BenchmarkApp();\n});"],"names":["wasm","cachedUint8ArrayMemory0","getUint8ArrayMemory0","cachedTextDecoder","MAX_SAFARI_DECODE_BYTES","numBytesDecoded","decodeText","ptr","len","getStringFromWasm0","addToExternrefTable0","obj","idx","handleError","f","args","e","isLikeNone","x","WASM_VECTOR_LEN","cachedTextEncoder","arg","view","buf","passStringToWasm0","malloc","realloc","mem","offset","code","ret","cachedDataViewMemory0","getDataViewMemory0","debugString","val","type","description","name","length","debug","i","builtInMatches","className","cachedUint32ArrayMemory0","getUint32ArrayMemory0","passArray32ToWasm0","run_quick_benchmark","test_type","iterations","input_digits","from_base","to_base","ptr0","len0","ptr1","len1","EXPECTED_RESPONSE_TYPES","__wbg_load","module","imports","bytes","instance","__wbg_get_imports","arg0","arg1","deferred0_0","deferred0_1","result","arg2","table","__wbg_finalize_init","__wbg_init","module_or_path","BenchmarkApp","__publicField","runButton","presetButtons","button","btn","preset","fromBase","toBase","inputNumber","loading","results","error","inputStr","inputDigits","testType","err","init","str","base","digits","num","n","base1","base2","a","b","correctnessEl","speedupEl","resultsSection","newChartContainer","container","baselineHeight","optimizedHeight"],"mappings":"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"}